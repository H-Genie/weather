{"version":3,"sources":["Header.js","Hourly.js","Main.js","Detail.js","App.js","index.js"],"names":["Header","state","timezone","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","getWeathers","a","axios","get","data","setState","this","React","Component","Hourly","time","temp","feels_like","pressure","humidity","dew_point","clouds","visibility","wind_speed","wind_deg","icon","description","pop","className","to","pathname","src","alt","toUpperCase","Main","isLoading","hourly","console","log","map","weather","Date","Number","dt","key","moment","format","toFixed","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1db72920.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        timezone : []\r\n    }\r\n\r\n    getLocation = () => {\r\n        navigator.geolocation.getCurrentPosition( (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n          this.getWeathers(lat,lon);\r\n        })\r\n    }\r\n    \r\n    getWeathers = async(lat,lon) => {\r\n        const key = \"3a237a3203cd2370a362baf609a7c734\";\r\n        const {\r\n            data : {timezone}\r\n        } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=daily&appid=${key}&units=metric`);\r\n\r\n        this.setState({timezone});\r\n    }\r\n\r\n    render() {\r\n        const {timezone} = this.state;\r\n        return(\r\n            <header>\r\n                <p>{timezone}</p>\r\n            </header>\r\n        )\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLocation();\r\n        this.getWeathers();\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Hourly({time,temp,feels_like,pressure,humidity,dew_point,clouds,visibility,wind_speed,wind_deg,icon,description,pop}) {\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to={{pathname:'/detail', state:{time,temp,feels_like,pressure,humidity,dew_point,clouds,visibility,wind_speed,wind_deg,icon,description,pop}}}>\r\n                <h4>{time}</h4>\r\n                <p className=\"indent\">기온 <span className=\"temp\">{temp}</span> ℃</p>\r\n                <p className=\"indent\">습도 {humidity}%</p>\r\n                <p className=\"indent\">풍속 {wind_speed} ㎞/s</p>\r\n                <div className=\"icon\">\r\n                    <img src={icon} alt={time} />\r\n                    <p>{description.toUpperCase()}</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hourly;","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\n// 컴포넌트\nimport Hourly from './Hourly';\n\n\nclass Main extends React.Component {\n  state = {\n    isLoading : true,\n    hourly : []\n  }\n\n  getLocation = () => {\n    navigator.geolocation.getCurrentPosition( (position) => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      this.getWeathers(lat,lon);\n    })\n  }\n\n  getWeathers = async(lat,lon) => {\n    const key = \"3a237a3203cd2370a362baf609a7c734\";\n    const {\n      data : {hourly}\n    } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=daily&appid=${key}&units=metric`);\n\n    console.log(lat,lon);\n\n    this.setState({\n      hourly,\n      isLoading : false\n    });\n    \n  }\n\n  render() {\n    const {isLoading, hourly} = this.state;\n    return (\n      <div className=\"box\">{isLoading ? 'Loading...' :\n\n        hourly.map((weather) => {\n\n          const time = new Date(Number(weather.dt+'000'));\n          return (\n            <Hourly             \n              key={weather.dt}\n              time={moment(time).format('MM/DD ddd h A')}\n              temp={weather.temp.toFixed(1)}\n              humidity={weather.humidity}\n              wind_speed={weather.wind_speed.toFixed(1)}\n              icon={'https://openweathermap.org/img/w/' + weather.weather[0].icon + '.png'}\n              description={weather.weather[0].description}\n\n              feels_like={weather.feels_like}\n              pressure={weather.pressure}\n              dew_point={weather.dew_point}\n              clouds={weather.clouds}\n              visibility={weather.visibility}\n              wind_deg={weather.wind_deg}\n              pop={weather.pop}\n            />\n          )\n\n        })\n\n      }</div>\n    );\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    this.getWeathers();\n  }\n\n}\n\nexport default Main;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Detail extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {location,history} = this.props;\r\n        if(location.state === undefined) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {location} = this.props;\r\n        console.log(location)\r\n        if(location.state) {\r\n            return (\r\n                <div className=\"details\">\r\n                    <h4>{location.state.time}</h4>\r\n                    <div className=\"detail_icon\">\r\n                        <img src={location.state.icon} />\r\n                        <p>{location.state.description.toUpperCase()}</p>\r\n                    </div>\r\n\r\n                    <p>기온 : {location.state.temp} ℃</p>\r\n                    <p>체감온도 : {location.state.feels_like.toFixed(1)} ℃</p>\r\n                    <p>대기압 : {location.state.pressure} hPa</p>\r\n                    <p>습도 : {location.state.humidity}%</p>\r\n                    <p>이슬점 : {location.state.dew_point} ℃</p>\r\n                    <p>구름량 : {location.state.clouds}%</p>\r\n                    <p>시정 : {(location.state.visibility/1000).toFixed(1)}km</p>\r\n                    <p>바람 : {location.state.wind_speed} ㎞/s ({location.state.wind_deg}˚)</p>\r\n                    <p>강수확률 : {(location.state.pop*100).toFixed(0)}%</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\n\nimport Headers from './Header';\nimport Main from './Main';\nimport Detail from './Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Headers />\n      <Route path=\"/\" exact={true} component={Main} />\n      <Route path=\"/detail\" component={Detail} />\n    </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}